var libdyn;(()=>{"use strict";var t={d:(s,i)=>{for(var e in i)t.o(i,e)&&!t.o(s,e)&&Object.defineProperty(s,e,{enumerable:!0,get:i[e]})},o:(t,s)=>Object.prototype.hasOwnProperty.call(t,s),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},s={};t.r(s),t.d(s,{Axis:()=>c,Config:()=>i,Field:()=>g,Graph:()=>p,Integration:()=>u,Interface:()=>f,Vector:()=>l,angle:()=>a,combos:()=>r,distance:()=>e,relative:()=>h,scale:()=>o,units:()=>n});class i{gap=40;markers=5;vectorColor="yellow";vectorWidth=1;vectorScalar=1;vectorMax=30;vectorMin=5;vectorHead=4;strokeStyle="white";lineWidth=2;fillStyle="white";textBaseline="middle";textAlign="center";markerFont="10px sans-serif";labelFont="15px sans-serif";axisColor="yellow";mouseVecScale=3;mouseVecWidth=3;mouseVecColor="red";trajColor="fuchsia";trajWidth=1;init(t,s){t.lineCap="round",t.strokeStyle=this.strokeStyle,t.lineWidth=this.lineWidth,t.fillStyle=this.fillStyle,t.textBaseline=this.textBaseline,t.textAlign=this.textAlign,t.translate(0,s),t.scale(1,-1)}}function e(t){return Math.hypot(...t.base.map(((s,i)=>t.tip[i]-s)))}function a(t){const s=t.tip[0]-t.base[0];var i=Math.atan((t.tip[1]-t.base[1])/s);return s<0&&(i+=Math.PI),i}function h(t,s,i=0){return(1-i)*((t-s.min)/(s.max-s.min))+i}function o(t,s,i,a=0){const o=e(t),r=h(o,s,a/i),n=o/(r*i),c=[],p=[];return t.base.forEach(((s,i)=>{c.push(s),p.push((t.tip[i]-s)/n+s)})),{base:c,tip:p,rel:r,scalar:n}}function r(t,s=1,e=new i){var a=Array.of(1);for(const i of t)a.length*=Math.ceil((i.length-e.gap+1)/s);for(var h=0;h<a.length;h++)a[h]=Array(t.length);return t.forEach(((i,h)=>{var o;o=t[h-1]?t[h-1]:{length:0};for(var r=0;r<a.length;)for(var n=e.gap;n<=i.length;n+=s)for(var c=0;c<=h*(o.length-e.gap);c+=s)a[r][h]=i.units(n),r++})),a}function n(t,s){const i=[];return s.forEach(((s,e)=>{i.push(s.units(t[e]))})),i}class c{constructor(t,s,e,a=new i){this.specs=t,this.length=s,this.Graph=e,this.config=a,this.scale=(this.length-this.config.gap)/(this.specs.max-this.specs.min),this.combos=r([this],1),this.lambdas=[]}pixels(t){return(t-this.specs.min)*this.scale+this.config.gap}units(t){return(t-this.config.gap)/this.scale+this.specs.min}label(t,s,i=!1){"string"!=typeof t&&(t=t%2==0?t.toString():t.toFixed(1).toString());var e=[s[0],s[1]-10];return i&&(e=[s[1]-10,s[0]]),{string:t,coords:e}}graph(t,s=!1,i=this.config.strokeStyle,e=this.config.lineWidth){var a=!1;this.lambdas.forEach((s=>{t.toString()==s.lambda.toString()&&(a=!0)})),a||this.lambdas.push({lambda:t,dash:s,color:i,width:e});const h=this.Graph.axes.indexOf(this),o=[];for(const s of this.combos)o.push([this.pixels(s[0]),this.Graph.axes[1-h].pixels(t(...s))]);this.Graph.draw({coords:o,flip:h},s,i,e),this.Graph.states.curves=this.Graph.context.getImageData(0,0,this.Graph.canvas.width,this.Graph.canvas.height)}}class p{constructor(t,s={min:-10,max:10,step:2,label:"X"},e={min:-10,max:10,step:2,label:"Y"},a=new i){this.config=a,this.context=t.getContext("2d",{willReadFrequently:!0}),this.canvas=t,this.axes=[new c(s,this.canvas.width,this),new c(e,this.canvas.height,this)],this.config.init(this.context,this.canvas.height),this.axes.forEach(((t,s)=>{const i=[[this.config.gap,this.config.gap]];for(var e=t.specs.min+t.specs.step;e<t.specs.max;e+=t.specs.step){const a=t.pixels(e);i.push([a,this.config.gap]),i.push([a,this.config.gap+this.config.markers]),i.push([a,this.config.gap]),this.text(t.label(e,[a,this.config.gap],s),s,this.config.markerFont)}i.push([t.length-1,this.config.gap]),i.push([t.length-1,this.config.gap+this.config.markers]),i.push([t.length-1,this.config.gap]),this.text(t.label(t.specs.label,[(t.length-this.config.gap)/2+this.config.gap,this.config.gap/1.8],s),s,this.config.labelFont,this.config.axisColor),this.draw({coords:i,flip:s},!1,this.config.strokeStyle,this.config.lineWidth,!0)})),this.states={axes:this.context.getImageData(0,0,this.canvas.width,this.canvas.height)},this.states.curves=this.states.axes}text(t,s=!1,i=this.config.font,e=this.config.fillStyle){this.context.save(),this.context.fillStyle=e,this.context.font=i,this.context.translate(...t.coords),this.context.scale(1,-1),s&&this.context.rotate(-Math.PI/2),this.context.fillText(t.string,0,0),this.context.restore()}draw(t,s=!1,i=this.config.strokeStyle,e=this.config.lineWidth,a=!1){this.context.save(),this.context.strokeStyle=i,this.context.lineWidth=e,s&&this.context.setLineDash([5,5]);const h=new Path2D;t.coords.forEach((s=>{(s[0]>=this.config.gap&&s[1]>=this.config.gap||a)&&(+t.flip?h.lineTo(...s.reverse()):h.lineTo(...s))})),this.context.stroke(h),this.context.restore();const o=t.coords[t.coords.length-1];return o[0]>=this.config.gap&&o[1]>=this.config.gap&&o[0]<=this.canvas.width&&o[1]<=this.canvas.height}pixels(t,s=!1){const i=[];return t.forEach((t=>{i.push([this.axes[+s].pixels(t[0]),this.axes[1-+s].pixels(t[1])])})),i}}class l{constructor(t,s,i){this.base=t,this.tip=Array(t.length),this.axes=i,this.lambdas=s,this.calculate()}calculate(){this.lambdas.forEach(((t,s)=>{this.tip[s]=this.base[s]+t(...this.base)}))}pixels(){const t=[],s=[];return this.axes.forEach(((i,e)=>{t.push(i.pixels(this.base[e])),s.push(i.pixels(this.tip[e]))})),{base:t,tip:s}}}class g extends p{constructor(t,s,a={min:-10,max:10,step:2,label:"X"},h={min:-10,max:10,step:2,label:"Y"},o=new i){super(t,a,h,o),this.lambdas=s,this.inputs=r(this.axes,this.config.vectorMax),this.vectors=[];const n=[];for(const t of this.inputs){const s=new l(t,this.lambdas,this.axes);this.vectors.push(s),n.push(e(s.pixels()))}this.min=0,this.max=Math.max(...n),this.vectors.forEach((t=>{this.vector(t)}))}vector(t,s=this.config.vectorColor,i=this.config.vectorWidth,e=1){const a=o(t.pixels(),this,this.config.vectorMax*e,this.config.vectorMin*e);if(this.draw({coords:[a.base,a.tip],flip:!1},!1,s,i)){const t=this.config.vectorHead*a.rel*e;this.tip(a,t,s,i)}}tip(t,s,i=this.config.vectorColor,e=this.config.vectorWidth){this.context.save(),this.context.translate(...t.tip),this.context.rotate(a(t)),this.draw({coords:[[-s,s],[0,0],[-s,-s]],flip:!1},!1,i,e,!0),this.context.restore()}trajectory(t,s=!0,i=!0,e=this.config.trajColor,a=this.config.trajWidth,h=this.config.vectorMax){const r=o(t.pixels(),this,h);if(!this.draw({coords:[r.base,r.tip],flip:!1},!1,e,a)||Math.abs(r.tip[0]-r.base[0])<.001&&Math.abs(r.tip[1]-r.base[1])<.001&&i)return null;if(!s)return r;try{this.trajectory(new l(n(r.tip,this.axes),this.lambdas,this.axes),s,i,e,a,h)}catch(t){}}}class u{constructor(t,s,e,a,h=new i){this.graph=t,this.index=this.graph.axes.indexOf(s),this.time=e,this.lambda=a,this.config=h}update(t){if(!this.stop){const s=this.lambda(...t);null==this.previous&&(this.previous=[s,-this.time]);const i=[s,this.previous[1]+this.time];return this.graph.draw({coords:this.graph.pixels([this.previous,i],this.index),flip:this.index},!1,this.config.trajColor)?(this.previous=i,!0):(this.stop=!0,!1)}}reset(){this.graph.context.putImageData(this.graph.states.curves,0,0),this.previous=[this.previous[0],-this.time],this.stop=!1}}class f{constructor(t,s=new i){this.Graph=t,this.config=s,this.states={field:this.Graph.context.getImageData(0,0,this.Graph.canvas.width,this.Graph.canvas.height),curves:this.Graph.states.curves,axes:this.Graph.states.axes},this.Graph instanceof g&&(this.states.mouse=this.states.field,this.mouse={x:10,y:10},this.mouse.x=200,this.mouse.y=200,this.arrow=!1,this.integration=!1,this.Graph.canvas.addEventListener("mousemove",(t=>{this.stop=!1;const s=this.Graph.canvas.getBoundingClientRect();this.mouse.x=t.clientX-s.left,this.mouse.y=this.Graph.canvas.height-(t.clientY-s.top),(this.mouse.x<this.config.gap||this.mouse.y<this.config.gap)&&(this.mouse.x,this.mouse.y=void 0),this.update.mouse()})),this.Graph.canvas.addEventListener("mouseleave",(()=>{this.mouse.x,this.mouse.y=void 0,this.update.mouse()})))}async traj(t,s=10){const i=[];for(this.integration&&this.integrations.forEach((t=>{i.push(new u(t.graph,t.axis,t.time,t.lambda,t.config))}));!this.stop;){const e=this.update.trajectory(t);if(null==e)break;this.integration&&i.forEach(((t,s)=>{t.update(n(e.base,this.Graph.axes))||(this.integrations[s].repeat?t.reset():i.splice(s,1))})),await new Promise((t=>setTimeout(t,e.rel/e.scalar*s))),t=e.tip}}update={mouse:()=>{this.Graph.context.putImageData(this.states.mouse,0,0),this.arrow?this.Graph.vector(new l(n([this.mouse.x,this.mouse.y],this.Graph.axes),this.Graph.lambdas,this.Graph.axes),this.config.mouseVecColor,this.config.mouseVecWidth,this.config.mouseVecScale):this.Graph.trajectory(new l(n([this.mouse.x,this.mouse.y],this.Graph.axes),this.Graph.lambdas,this.Graph.axes))},trajectory:t=>{this.Graph.context.putImageData(this.states.mouse,0,0);const s=this.Graph.trajectory(new l(n(t,this.Graph.axes),this.Graph.lambdas,this.Graph.axes),!1);return this.states.mouse=this.Graph.context.getImageData(0,0,this.Graph.canvas.width,this.Graph.canvas.height),this.update.mouse(),this.Graph.tip(s,4,this.config.trajColor),s},lambdas:()=>{this.Graph.context.putImageData(this.states.axes,0,0),this.Graph instanceof g&&this.Graph.vectors.forEach((t=>{t.calculate(),this.Graph.vector(t)})),this.Graph.axes.forEach((t=>{t.lambdas.forEach((s=>{t.graph(s.lambda,s.dash,s.color,s.width)}))})),this.states.field=this.Graph.context.getImageData(0,0,this.Graph.canvas.width,this.Graph.canvas.height),this.states.mouse=this.Graph.context.getImageData(0,0,this.Graph.canvas.width,this.Graph.canvas.height)}};add={clicker:(t=10)=>{this.arrow=!0,this.Graph.canvas.addEventListener("click",(async()=>{this.traj([this.mouse.x,this.mouse.y],t)}))},clear:t=>{t.addEventListener("click",(()=>{this.stop=!0,this.states.mouse=this.states.field,this.Graph.context.putImageData(this.states.field,0,0),this.integration&&this.integrations.forEach((t=>{t.graph.context.putImageData(t.graph.states.curves,0,0)}))}))},slider:(t,s,i)=>{s.innerHTML=t.value,t.oninput=()=>{s.innerHTML=t.value,i.value=parseFloat(t.value),this.update.lambdas(),this.states.curves=this.Graph.context.getImageData(0,0,this.Graph.canvas.width,this.Graph.canvas.height)}},integration:(t,s,i,e,a=this.config,h=!1)=>{this.integration=!0,this.integrations||(this.integrations=[]),this.integrations.push({graph:t,axis:s,time:i,lambda:e,config:a,repeat:h})}}}libdyn=s})();